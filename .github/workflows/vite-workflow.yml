name: NodeJS with Wite

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  EVOAR_URI: ukpo-spbpu.cr.cloud.ru
  # PROJECT_ID: 06363f30-bde4-41a2-a96f-398bf8bd830e

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x

    - name: Restoring npm cache
      id: npm-cache
      uses: actions/cache@v3
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Install npm packages
      if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm install

  unit-ui-testing:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x

    - name: Restoring npm cache
      id: npm-cache
      uses: actions/cache@v3
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Install npm packages
      if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm install

    - name: Unit tests
      run: npm test

  integration-ui-testing:
    needs: unit-ui-testing
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x

    - name: Restoring npm cache
      id: npm-cache
      uses: actions/cache@v3
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Build
      if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm install

    - name: Unit tests
      run: npm run integration
  
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker buildx
      uses: https://github.com/docker/setup-buildx-action@v1
      
    - name: Log in to Evolution Artifact Registry
      uses: https://github.com/docker/login-action@v2
      with:
        registry: ${{ env.EVOAR_URI }}
        username: ${{ secrets.EVOAR_KEYID }}
        password: ${{ secrets.EVOAR_KEYSECRET }}

    - name: Build and push docker image to Evolution Artifact Registry
      id: build_push
      uses: https://github.com/docker/build-push-action@v4
      with:
        push: true
        platforms: linux/amd64
        provenance: false
        tags: ${{ env.EVOAR_URI }}/frontend:build${{ github.sha }}
        file: ./Dockerfile
        context: .
    
    - name: Создай или обнови Evolution Container App
      uses: https://github.com/CLOUDdotRu/evo-container-app-action@main
      with:
          # project_id: ${{ env.PROJECT_ID }}
          client_id: ${{ secrets.EVOAR_KEYID }}
          client_secret: ${{ secrets.EVOAR_KEYSECRET }}
          registry_uri: ${{ env.EVOAR_URI }}
          image_name: frontend@${{ steps.build_push.outputs.digest }}	
          name: gitverse-action-test6
          port: 8080